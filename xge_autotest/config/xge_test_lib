#!/bin/bash
# 

## Utility function
function init_net_ip()
{
    LOCAL_IP=`ifconfig eth0 | grep 'inet addr:' | awk '{print $2}' | awk -F':' '{print $2}'`
    for tmpip in "${!initial_ip[@]}"
    do
        #echo $tmpip
        if [ "$tmpip"x = "$LOCAL_IP"x ];then
            BACK_IP=${initial_ip[$tmpip]}
            echo $BACK_IP
        fi
    done
}

function init_net_export()
{
    declare -a local_tp_list
    declare -a local_fibre_list
    declare -a remote_tp_list
    declare -a remote_fibre_list
    local_netport_list=`ifconfig -a | grep 'eth' | awk '{print $1}'`
    for i in $local_netport_list
    do
        ethtool $i | grep "TP"
        if [ $? = 0 ];then
            local_tp_list=(${local_tp_list[*]} $i)
        else
            local_fibre_list=(${local_fibre_list[*]} $i)
        fi
    done

    local_tp1=${local_tp_list[0]}
    local_tp2=${local_tp_list[1]}
    local_fibre1=${local_fibre_list[0]}
    local_fibre2=${local_fibre_list[1]}

    remote_netport_list=$(ssh root@192.168.1.181 ifconfig -a | grep 'eth' | awk '{print $1}')
    for i in $remote_netport_list
    do
        ssh root@192.168.1.181 "ethtool $i | grep 'TP'"
        if [ $? = 0 ];then
            remote_tp_list=(${remote_tp_list[*]} $i)
        else
            remote_fibre_list=(${remote_fibre_list[*]} $i)
        fi
    done


    remote_tp1=${remote_tp_list[0]}
    remote_tp2=${remote_tp_list[1]}
    remote_fibre1=${remote_fibre_list[0]}
    remote_fibre2=${remote_fibre_list[1]}
    echo $remote_tp1 $remote_tp2 $remote_fibre1 $remote_fibre2
    #echo $local_tp_list $local_fibre_list $remote_tp_list $remote_fibre_list
}

function setTrustRelation()
{
    rm -f ~/.ssh/*
    expect -c '
        set timeout -1
        set back_ip '${BACK_IP}'
        spawn ssh-keygen -t rsa
        expect {
        "*save the key*id_rsa*" { send "\r"; exp_continue }
        "*verwrite*y/n*" { send "y\r"; exp_continue }
        "*passphrase*passphrase*" { send "\r"; exp_continue }
        "*same passphrase*" { send "\r" }
        }

        spawn scp -r /root/.ssh/id_rsa.pub root@${back_ip}:/root/.ssh/authorized_keys
        expect "Are you sure you want to continue connecting (yes/no)?"
        send "yes\r"
        sleep 10
        expect -re ".*password:"
        send "root\r"

        expect eof
        exit 0
    '

    return 0
}

